{"version":3,"sources":["webpack:///./src/views/student/ProfHandouts.vue?d826","webpack:///src/views/student/ProfHandouts.vue","webpack:///./src/views/student/ProfHandouts.vue?f0df","webpack:///./src/views/student/ProfHandouts.vue","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","active","list","fetchHandout","open","on","$event","scopedSlots","_u","key","fn","ref","item","children","_v","_s","name","length","_e","staticRenderFns","handoutDialog","dialog","formObject","component","VCol","VContainer","VRow","VTreeview","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","Boolean","VTreeviewNode","inject","treeview","props","level","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","text","scopedProps","leaf","selected","indeterminate","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","e","genCheckbox","undefined","genLevel","genNode","setTextColor","genChild","genChildrenWrapper","map","genTransition","h","isExcluded","String","search","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","selectionType","validator","v","includes","value","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","mounted","$slots","console","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","c","calculateState","add","counts","state","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","changed","descendant","updateOpen","updateVnodeState","has","themeClasses"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,QAAU,WAAW,CAACF,EAAG,QAAQ,CAACE,MAAM,CAAC,GAAK,KAAK,GAAK,OAAO,CAACF,EAAG,aAAa,CAACE,MAAM,CAAC,OAASN,EAAIO,OAAO,MAAQP,EAAIQ,KAAK,gBAAgBR,EAAIS,aAAa,KAAOT,EAAIU,KAAK,OAAS,GAAG,UAAY,GAAG,MAAQ,UAAU,gBAAgB,GAAG,WAAa,IAAIC,GAAG,CAAC,gBAAgB,SAASC,GAAQZ,EAAIO,OAAOK,GAAQ,cAAc,SAASA,GAAQZ,EAAIU,KAAKE,IAASC,YAAYb,EAAIc,GAAG,CAAC,CAACC,IAAI,QAAQC,GAAG,SAASC,GAC1hB,IAAIC,EAAOD,EAAIC,KACf,MAAO,CAAGA,EAAKC,SAA6Gf,EAAG,OAAO,CAACJ,EAAIoB,GAAGpB,EAAIqB,GAAGH,EAAKI,SAAjIlB,EAAG,IAAI,CAACO,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIS,aAAaS,MAAS,CAAClB,EAAIoB,GAAGpB,EAAIqB,GAAGH,EAAKI,gBAAwDtB,EAAIQ,KAAKe,QAAU,EAAGnB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,2BAA2BpB,EAAIwB,MAAM,IAAI,IAAI,IAC1PC,EAAkB,G,wDC2BtB,GACE,KAAF,kBACMC,eAAe,EACfC,QAAQ,EACRnB,KAAM,GACNE,KAAM,GACNH,OAAQ,GACRqB,WAAY,CACV,GAAR,GACQ,WAAR,GACQ,YAAR,GACQ,UAAR,GACQ,MAAR,GACQ,SAAR,GACQ,eAAR,MAGE,MAAF,CACI,QAAJ,CACM,QADN,WACQ,IAAR,OACQ,KAAR,iBACA,kBACU,EAAV,iBACU,EAAV,0BAGM,MAAN,IAGE,QA7BF,WA8BI,KAAJ,QAEE,QAAF,CACI,aADJ,SACA,GACA,YACM,OAAN,kFAEI,KALJ,WAKM,IAAN,OACM,KAAN,2BACM,MAAN,qGACQ,EAAR,wBACA,mBACQ,QAAR,yBAGI,WAbJ,SAaA,KACM,OAAN,GACQ,IAAR,MACU,KAAV,MACU,MACF,IAAR,OACU,KAAV,QACU,MACF,IAAR,SACU,KAAV,UACU,MAEF,QACE,SAIN,IA9BJ,aAiCI,KAjCJ,SAiCA,GACM,IAAN,8BAAQ,OAAR,WACM,OAAN,0BACM,KAAN,qBAEI,OAtCJ,SAsCA,KAGI,KAzCJ,WAyCM,IAAN,OACA,mCAAQ,OAAR,yBACM,OAAN,qCAOM,KAAN,WAEI,aApDJ,SAoDA,GACM,QAAN,MAAQ,KAAR,wBAGE,SAAF,CACI,KAAJ,CACM,IADN,WAEQ,OAAR,mBAEM,IAAN,YACQ,OAAR,wBC5Hma,I,iFCO/ZC,EAAY,eACd,EACA9B,EACA0B,GACA,EACA,KACA,KACA,MAIa,aAAAI,EAAiB,QAQhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,aAAA,KAAWC,OAAA,KAAKC,YAAA,Q,wWCR7CC,EAAa,OAAAC,EAAA,MAAO,EAAD,KAEvB,eAFF,aASaC,EAAqB,CAChCC,YADgC,QAEhCC,YAAa,CACXC,KADW,OAEXC,QAAS,2BAEXC,MAAO,CACLF,KADK,OAELC,QAAS,WAEXE,WAAY,CACVH,KADU,OAEVC,QAAS,aAEXG,kBAAmB,CACjBJ,KADiB,OAEjBC,QAAS,0BAEXI,aAAc,CACZL,KADY,OAEZC,QAAS,YAEXK,aAAc,CACZN,KADY,OAEZC,QAAS,YAEXM,QAAS,CACPP,KADO,OAEPC,QAAS,MAEXO,SAAU,CACRR,KADQ,OAERC,QAAS,QAEXQ,aAlCgC,SAmChCC,YAAa,CACXV,KADW,OAEXC,QAAS,YAEXU,QAAS,CACPX,KADO,OAEPC,QAAS,gBAEXW,OAAQ,CACNZ,KADM,OAENC,QAAS,eAEXY,YA/CgC,QAgDhCC,QAhDgC,QAiDhCC,WAjDgC,QAkDhCC,cAAe,CACbhB,KADa,OAEbC,QAAS,UAEXgB,OAtDgC,QAuDhCC,WAAYC,SAIRC,EAAgBzB,EAAA,gBAAoC,CACxDZ,KADwD,kBAGxDsC,OAAQ,CACNC,SAAU,CACRrB,QAAS,OAIbsB,MAAO,gBACLC,MADK,OAEL7C,KAAM,CACJqB,KADI,OAEJC,QAAS,kBAAM,QAEdJ,GAGL4B,KAAM,iBAAO,CACXC,WADW,EAEXC,UAFW,EAGXC,iBAHW,EAIXC,WAJW,EAKXC,QALW,EAMXC,YAAY,IAGdC,SAAU,CACRC,SADQ,WAEN,OAAO,eAAqBvE,KAAD,KAAYA,KAAvC,eAEFc,IAJQ,WAKN,OAAO,eAAqBd,KAAD,KAAYA,KAAvC,UAEFkB,SAPQ,WAQN,OAAO,eAAqBlB,KAAD,KAAYA,KAAvC,eAEFwE,KAVQ,WAWN,OAAO,eAAqBxE,KAAD,KAAYA,KAAvC,WAEFyE,YAbQ,WAcN,MAAO,CACLxD,KAAMjB,KADD,KAEL0E,MAAO1E,KAFF,SAGL2E,SAAU3E,KAHL,WAIL4E,cAAe5E,KAJV,gBAKLM,OAAQN,KALH,SAMLS,KAAMT,KAAKoE,SAGfS,aAvBQ,WAwBN,OAAI7E,KAAJ,gBAAiCA,KAAjC,kBACSA,KAAJ,WAA4BA,KAA5B,OACOA,KAAP,SAEP8E,YA5BQ,WA6BN,QAAS9E,KAAF,aAAsBA,KAAKkB,SAAP,UAA4BlB,KAAvD,gBAIJ+E,QA5DwD,WA6DtD/E,KAAA,kBAAAA,OAGFgF,cAhEwD,WAiEtDhF,KAAA,oBAAAA,OAGFiF,QAAS,CACPC,cADO,WACM,WACX,OAAO,IAAIC,SAAc,SAAAC,GAGvB,IAAK,EAAD,UAAkB,WAAlB,SAA2C,EAA3C,cAAgE,EAApE,UAAoF,OAAOA,IAE3F,eACAA,EAAQ,eAAkB,EAA1B,UANK,MAOC,WACN,eACA,mBAGJ3E,KAdO,WAeLT,KAAA,QAAeA,KAAf,OACAA,KAAA,oBAAyBA,KAAzB,IAAmCA,KAAnC,QACAA,KAAA,qBAEFqF,SAnBO,WAoBL,IAAMnE,EAAN,GAKA,OAHIlB,KAAKsF,aAAT,MAA6BpE,EAAA,KAAclB,KAAKsF,aAAaC,MAAMvF,KAAnE,cACKkB,EAAA,KAAclB,KAAd,MAEEA,KAAKE,eAAe,MAAO,CAChCsF,KADgC,QAEhCC,YAAa,0BAFf,IAKFC,eA9BO,WA+BL,OAAK1F,KAAKsF,aAAV,QAEOtF,KAAKE,eAAe,MAAO,CAChCuF,YAAa,4BACZzF,KAAKsF,aAAaK,QAAQ3F,KAF7B,cAFuC,MAMzC4F,cArCO,WAsCL,OAAK5F,KAAKsF,aAAV,OAEOtF,KAAKE,eAAe,MAAO,CAChCuF,YAAa,2BACZzF,KAAKsF,aAAaO,OAAO7F,KAF5B,cAFsC,MAMxC8F,WA5CO,WA6CL,IAAM5E,EAAW,CACflB,KADe,iBAEfA,KAFe,WAGfA,KAHF,iBAMA,OAAOA,KAAKE,eAAe,MAAO,CAChCuF,YAAa,4BADf,IAIFM,UAvDO,WAuDE,WACP,OAAO/F,KAAKE,eAAe8F,EAApB,KAA2B,CAChCP,YADgC,0BAEhCQ,MAAO,CACL,gCAAiCjG,KAD5B,OAEL,mCAAoCA,KAAKmE,WAE3CqB,KANgC,UAOhC9E,GAAI,CACFwF,MAAQ,SAAAC,GACF,EAAJ,WAEAA,EAAA,kBAEI,EAAJ,WAEA,wBAA0B,kBAAM,EAAhC,cAGH,CAACnG,KAAKmE,UAAYnE,KAAjB,YAAoCA,KAlBxC,cAoBFoG,YA5EO,WA4EI,WACT,OAAOpG,KAAKE,eAAe8F,EAApB,KAA2B,CAChCP,YADgC,4BAEhC5B,MAAO,CACLrB,MAAOxC,KAAKqE,WAAarE,KAAlB,mBAAuCqG,GAEhD3F,GAAI,CACFwF,MAAQ,SAAAC,GACF,EAAJ,WAEAA,EAAA,kBAEI,EAAJ,WAEA,wBAA0B,WAExB,aAAe,WACb,cAAmB,EAAnB,WACA,qBAEA,0BAA6B,EAA7B,IAAuC,EAAvC,YACA,oCAKP,CAACnG,KAzBJ,gBA2BFsG,SAxGO,SAwGC,GAAe,WACrB,OAAO,uBAAuB,kBAAM,uBAA2B,CAC7Db,YAAa,+BAGjBc,QA7GO,WA6GA,WACCrF,EAAW,CAAClB,KAAlB,cAYA,OAVIA,KAAJ,YAAqBkB,EAAA,QAAiBlB,KAAjB,eAEjBA,KAAJ,YACEkB,EAAA,QAAiBlB,KAAjB,aAEAkB,EAAA,cAAAA,EAAQ,eAAYlB,KAAKsG,SAAzB,KAGFpF,EAAA,cAAAA,EAAQ,eAAYlB,KAAKsG,SAAStG,KAAlC,SAEOA,KAAKE,eAAe,MAAOF,KAAKwG,aAAaxG,KAAKiE,UAAYjE,KAAnC,MAA+C,CAC/EyF,YAD+E,wBAE/EQ,MAAO,kBACJjG,KAAD,YAAoBA,KAAKiE,UAE3BvD,GAAI,CACFwF,MAAO,WACD,EAAJ,WAEI,eAAoB,EAAxB,YACE,SACS,EAAJ,cACL,YAAiB,EAAjB,SACA,wBAA2B,EAA3B,IAAqC,EAArC,UACA,8BAdR,IAoBFO,SA9IO,SA8IC,GACN,OAAOzG,KAAKE,eAAewD,EAAe,CACxC5C,IAAK,eAAqBG,EAAMjB,KADQ,SAExC6D,MAAO,CACLzB,YAAapC,KADR,YAELqC,YAAarC,KAFR,YAGLiB,OACAoC,WAAYrD,KAJP,WAKLsD,cAAetD,KALV,cAMLwC,MAAOxC,KANF,MAOLyC,WAAYzC,KAPP,WAQL0C,kBAAmB1C,KARd,kBASLiD,QAASjD,KATJ,QAULkD,OAAQlD,KAVH,OAWLgD,YAAahD,KAXR,YAYL6C,QAAS7C,KAZJ,QAaL8C,SAAU9C,KAbL,SAcL4C,aAAc5C,KAdT,aAeL2C,aAAc3C,KAfT,aAgBL+C,aAAc/C,KAhBT,aAiBLwD,WAAYxD,KAjBP,WAkBLmD,YAAanD,KAlBR,YAmBLoD,QAASpD,KAnBJ,QAoBLuD,OAAQvD,KApBH,OAqBL8D,MAAO9D,KAAK8D,MAAQ,GAEtBlD,YAAaZ,KAAKsF,gBAGtBoB,mBA3KO,WA4KL,IAAK1G,KAAD,SAAiBA,KAArB,SAAoC,OAAO,KAE3C,IAAMkB,EAAW,CAAClB,KAAKkB,SAASyF,IAAI3G,KAApC,WAEA,OAAOA,KAAKE,eAAe,MAAO,CAChCuF,YAAa,6BADf,IAIFmB,cApLO,WAqLL,OAAO5G,KAAKE,eAAe,EAApB,KAAuC,CAACF,KAA/C,yBAIJF,OA7PwD,SA6PlD,GACJ,IAAMoB,EAAW,CAAClB,KAAlB,WAKA,OAHIA,KAAJ,WAAqBkB,EAAA,KAAclB,KAAnC,iBACKkB,EAAA,KAAclB,KAAd,sBAEE6G,EAAE,MAAO,CACdpB,YADc,kBAEdQ,MAAO,CACL,yBAA0BjG,KADrB,YAEL,yBAA0BA,KAFrB,YAGL,4BAA6BA,KAHxB,SAIL,2BAA4BA,KAJvB,QAKL,0BAA2BA,KALtB,OAML,4BAA6BA,KANxB,WAOL,4BAA6BA,KAAK4D,SAASkD,WAAW9G,KAAzB,MAE/BK,MAAO,CACL,gBAAiB0G,OAAO/G,KAAD,UAZ3B,MAkBJ,I,kCCxWM,kBACJ,IAAMwE,EAAO,eAAqBvD,EAAlC,GAEA,OAAOuD,EAAA,4BAAiCwC,EAAjC,sBAAP,EAGI,0BASJ,GAAIC,EAAOhG,EAAM+F,EAAjB,GACE,SAGF,IAAM9F,EAAW,eAAqBD,EAAtC,GAEA,KAAc,CAEZ,IADA,IAAIiG,GAAJ,EACSC,EAAT,EAAgBA,EAAIjG,EAApB,OAAqCiG,IAC/BC,EAAgBH,EAAQ/F,EAAT,WAAnB,KACEgG,GAAA,GAIJ,KAAW,OAAO,EAKpB,OAFAG,EAAA,IAAa,eAAqBpG,EAAlC,KAEA,ECMa,cAAAiB,EAAA,MACb,eADmB,YAEnB,QAFa,OAIN,CACPb,KADO,aAGPiG,QAHO,WAIL,MAAO,CAAE1D,SAAU5D,OAGrB6D,MAAO,gBACLvD,OAAQ,CACNgC,KADM,MAENC,QAAS,iBAAO,KAElBgF,MALK,QAMLN,OANK,SAOLO,UAPK,QAQLC,MAAO,CACLnF,KADK,MAELC,QAAS,iBAAO,KAElBmF,eAZK,QAaLjH,KAAM,CACJ6B,KADI,MAEJC,QAAS,iBAAO,KAElBoF,QAjBK,QAkBLC,aAAc,CACZtF,KADY,QAEZC,SAAS,GAEXyE,OAtBK,OAuBLa,cAAe,CACbvF,KADa,OAEbC,QAFa,OAGbuF,UAAY,SAAAC,GAAD,MAAe,CAAC,OAAQ,eAAeC,SAASD,KAE7DE,MAAO,CACL3F,KADK,MAELC,QAAS,iBAAO,MAEfJ,GAGL4B,KAAM,iBAAO,CACXD,OADW,EAEXoE,YAAa,IAFF,IAGXC,MAHW,GAIXC,UAAW,IAJA,IAKXC,cAAe,IAAIC,MAGrBhE,SAAU,CACRiE,cADQ,WAEN,IAAMlB,EAAW,IAAjB,IAEA,IAAKrH,KAAL,OAAkB,OAAOqH,EAEzB,IAAK,IAAIF,EAAT,EAAgBA,EAAInH,KAAKyH,MAAzB,OAAuCN,IACrCC,EACEpH,KAAKiH,QADQ,EAEbjH,KAAKyH,MAFQ,GAGbzH,KAHa,OAIbA,KAJa,QAKbA,KALa,SAMbA,KANa,aAAf,GAWF,WAIJwI,MAAO,CACLf,MAAO,CACLgB,QADK,WACE,WACCC,EAAUC,OAAA,KAAY3I,KAAZ,YAA4B,SAAA4I,GAAC,OAAI,eAAqB,WAAD,KAAqB,EAA1F,YACMC,EAAU7I,KAAK8I,QAAQ9I,KAA7B,OACM+I,EAAO,eAAUF,EAHlB,GAML,GAAKE,EAAD,UAAgBF,EAAA,OAAiBH,EAArC,SAGAK,EAAA,SAAa,SAAAH,GAAC,cAAW,QAAzB,MAEA,IAAMI,EAAmB,eAAIhJ,KAA7B,eACAA,KAAA,cAAqB,IAArB,IACAA,KAAA,YAAmB,IAAnB,IACAA,KAAA,UAAiB,IAAjB,IACAA,KAAA,UAAeA,KAfV,OAqBA,eAAUgJ,EAAkB,OAAnB,OAAmB,CAAIhJ,KAArC,iBAA2DA,KAAKiJ,iBAElEC,MAAM,GAER5I,OA3BK,SA2BC,GACJN,KAAA,yBAAmCA,KAAnC,YAAqDA,KAArD,aAAwEA,KAAxE,aAEFiI,MA9BK,SA8BA,GACHjI,KAAA,yBAAmCA,KAAnC,cAAuDA,KAAvD,eAA4EA,KAA5E,eAEFS,KAjCK,SAiCD,GACFT,KAAA,yBAAmCA,KAAnC,UAAmDA,KAAnD,WAAoEA,KAApE,YAIJ+E,QA9GO,WA8GA,WACL/E,KAAA,UAAeA,KAAf,OACAA,KAAA,eAAmB,SAAAc,GAAG,OAAI,iBAAoB,eAAoB,eAAqBA,EAAK,EAA9C,SAApB,GAA1B,MACAd,KAAA,gBAAoB,SAAAc,GAAG,OAAI,eAAkB,eAAoB,eAAqBA,EAAK,EAA9C,SAAlB,GAA3B,OAGFqI,QApHO,WAoHA,YAEDnJ,KAAKoJ,OAAOzD,SAAW3F,KAAKoJ,OAAhC,SACE,OAAAC,EAAA,MAAY,8DAAZ,MAGErJ,KAAJ,QACEA,KAAA,eAEAA,KAAA,cAAkB,SAAAc,GAAG,OAAI,aAAgB,eAAoB,eAAqBA,EAAK,EAA9C,SAAhB,GAAzB,MACAd,KAAA,aAIJiF,QAAS,CAEPqE,UAFO,SAEE,GAAgB,WACvBX,OAAA,KAAY3I,KAAZ,gBAAgC,SAAAc,GAAG,OAAI,aAAgB,eAAqB,WAAD,KAAuB,EAA3D,SAAvC,MACAd,KAAA,YAEF8I,QANO,SAMA,GACL,IADqC,IAAhBS,EAAgB,uDAAhC,GACIpC,EAAT,EAAgBA,EAAIM,EAApB,OAAkCN,IAAK,CACrC,IAAMrG,EAAM,eAAqB2G,EAAD,GAAWzH,KAA3C,SACAuJ,EAAA,KAAAzI,GACA,IAAMI,EAAW,eAAqBuG,EAAD,GAAWzH,KAAhD,cACA,GACEuJ,EAAA,WAAAA,EAAI,eAASvJ,KAAK8I,QAAlB,KAIJ,UAEFU,UAlBO,SAkBE,GACP,IAD8D,WAAvCC,EAAuC,uDAAvD,KACEtC,EAAT,EAAgBA,EAAIM,EAApB,OAAkCN,IAAK,CACrC,IAAMlG,EAAOwG,EAAb,GACM3G,EAAM,eAAqBG,EAAMjB,KAAvC,SACMkB,EAAW,eAAqBD,EAAMjB,KAAP,aAArC,IACM0J,EAAU1J,KAAKmI,MAAMwB,eAAe7I,GAAOd,KAAKmI,MAAtC,GAAmD,CACjE9D,YADiE,EAC9CH,iBAD8C,EACtBD,UADsB,EACLG,QADK,EACUwF,MAAO,MAG9EC,EAAY,CAChBD,MAAOF,EADS,MAEhBD,SACAvI,SAAUA,EAAA,KAAc,SAAA4I,GAAD,OAAY,eAAqBA,EAAG,EAH3C,YAIhB7I,QAGFjB,KAAA,YAfqC,IAkBhCA,KAAKmI,MAAMwB,eAAZ,WAAmCF,GAAmBzJ,KAAKmI,MAAMwB,eAArE,GACEE,EAAA,WAAkB7J,KAAKmI,MAAMsB,GAA7B,YAEAI,EAAA,WAAkBH,EAAlB,WACAG,EAAA,gBAAuBH,EAAvB,iBAGFG,EAAA,SAAgBH,EAAhB,SACAG,EAAA,OAAcH,EAAd,OAEA1J,KAAA,SAAmBkB,EAAD,OAA0BlB,KAAK+J,eAAeF,EAAM7J,KA5BjC,OA4BnB,EAGdA,KAAKmI,MAAMrH,GAAf,YAAgCd,KAAKqI,cAAc2B,IAAIlJ,GACnDd,KAAKmI,MAAMrH,GAAf,UAA8Bd,KAAKkI,YAAY8B,IAAIlJ,GAC/Cd,KAAKmI,MAAMrH,GAAf,QAA4Bd,KAAKoI,UAAU4B,IAAIlJ,GAE/Cd,KAAA,sBAGJ+J,eAzDO,SAyDO,KACZ,IAAME,EAASJ,EAAA,iBAAqB,cAGlC,OAFAI,EAAA,KAAcxG,QAAQyG,EAAA,GAAtB,YACAD,EAAA,KAAcxG,QAAQyG,EAAA,GAAtB,iBACA,IACC,CAAC,EAJJ,IASA,OAHAL,EAAA,aAAoBA,EAAA,SAAF,QAA0BI,EAAA,KAAcJ,EAAA,SAA1D,OACAA,EAAA,iBAAwBA,EAAD,aAAqBI,EAAA,MAAiBA,EAAA,GAA7D,GAEA,GAEFE,SArEO,WAsELnK,KAAA,4BAAkCA,KAAlC,YAEFiJ,aAxEO,WAyELjJ,KAAA,sBAA4BA,KAA5B,gBAEFoK,WA3EO,WA4ELpK,KAAA,8BAAoCA,KAApC,cAEFqK,cA9EO,SA8EM,KAAiC,WAC5CrK,KAAA,QAAkBA,KAAK4H,aAAe,uBAAe,SAAA9G,GAAG,OAAI,WAA1C,uBAAlB,KAEFwJ,uBAjFO,SAiFe,SAAsE,WAC1FrC,EAAQjI,KAAK4H,aAAeK,EAAA,KAAU,SAAAF,GAAC,OAAI,eAAqBA,EAAG,EAA3D,YAARE,EACA,IAAMsC,EAAM,eAAZ,GACI,eAAUA,EAAd,KAEAA,EAAA,SAAY,SAAAzJ,GAAG,OAAI0J,EAAS1J,GAA5B,MACAmH,EAAA,SAAc,SAAAnH,GAAG,OAAI0J,EAAS1J,GAA9B,MAEA2J,MAEFC,eA3FO,SA2FO,GAAmD,MAA3BC,EAA2B,uDAAnD,GACNzJ,EAAWlB,KAAKmI,MAAMrH,GAA5B,UAEA,EAAA6J,GAAA,gCAEA,IAAK,IAAIxD,EAAT,EAAgBA,EAAIjG,EAApB,OAAqCiG,IACnCwD,EAAc3K,KAAK0K,eAAexJ,EAApB,GAAdyJ,GAGF,UAEFC,WAtGO,SAsGG,GACR,IAAInB,EAASzJ,KAAKmI,MAAMrH,GAAxB,OAEM+J,EAAN,GACA,aAAOpB,EACLoB,EAAA,KAAApB,GACAA,EAASzJ,KAAKmI,MAAMsB,GAApBA,OAGF,UAEFqB,SAjHO,SAiHC,GACN,IAAMhK,EAAM,eAAqB+I,EAAD,KAAY7J,KAA5C,SACAA,KAAA,iBAEAA,KAAA,qBAEF+K,WAvHO,SAuHG,GACR,IAAMjK,EAAM,eAAqB+I,EAAD,KAAY7J,KAA5C,SACIA,KAAKmI,MAAT,KAAqBnI,KAAKmI,MAAMrH,GAAK8I,MAAQ,OAE/CoB,SA3HO,SA2HC,GACN,OAAOhL,KAAKmI,MAAMrH,GAAKI,UAAYlB,KAAKmI,MAAMrH,GAAKI,SAAnD,QAEF+J,aA9HO,SA8HK,KAAyC,WACnD,GAAKjL,KAAKmI,MAAMwB,eAAhB,IAEK3J,KAAL,gBACEA,KAAA,qBAAyB,SAAAM,GACvB,uBACA,sBACA,2BAIJ,IAAMuJ,EAAO7J,KAAKmI,MAAlB,GACA,IAEA,EAAcnI,KAAKkI,YAAY8B,IAA/B,GACKhK,KAAKkI,YAAYgD,OAAOpK,GAE7B+I,EAAA,WAEA7J,KAAA,uBAEFmL,eAnJO,SAmJO,KAA2C,WACvD,GAAKnL,KAAKmI,MAAMwB,eAAhB,IAEA,IAAMyB,EAAU,IAAhB,IAEA,mBAAIpL,KAAK6H,cAAiC,CACxC,IAAM8C,EAAc,IAAH,sBAAY3K,KAAK0K,eAAlC,KACAC,EAAA,SAAoB,SAAAU,GAClB,wBACA,8BACAD,EAAA,YAGF,IAAMP,EAAU7K,KAAK4K,WAArB,GACAC,EAAA,SAAgB,SAAApB,GACd,WAAqB,iBAAoB,QAApB,GAAwC,EAA7D,OACA2B,EAAA,MAAoB,WAApB,oBAGFpL,KAAA,sBACAA,KAAA,4BACAoL,EAAA,SArBqD,2BAwBvD,YAA2BA,EAA3B,yDAA8C,iCAAnC,EAAmC,KAA9C,EAA8C,KAC5CpL,KAAA,oBAE2B,SAAvBA,KAAK6H,eAA4B7H,KAAKgL,SAA1C,MAEA,IAAA/C,EAAiBjI,KAAKqI,cAAc2B,IAApC,GAA+ChK,KAAKqI,cAAc6C,OAAlE,KA7BqD,qFAgCzDI,WAnLO,SAmLG,KAAuC,WAC/C,GAAKtL,KAAKmI,MAAMwB,eAAhB,IAEA,IAAME,EAAO7J,KAAKmI,MAAlB,GACMjH,EAAW,eAAqB2I,EAAD,KAAY7J,KAAjD,cAEIkB,IAAaA,EAAb,QAAgC2I,EAAhC,QAA+CA,EAAA,MAAnD,UACEA,EAAA,4BAAgC,kBAAM,eAAtC,MACS3I,GAAYA,EAAhB,SACL2I,EAAA,SAEAA,EAAA,OAAc7J,KAAKoI,UAAU4B,IAA7B,GAAwChK,KAAKoI,UAAU8C,OAAvD,GAEAlL,KAAA,uBAGJuL,iBAnMO,SAmMS,GACd,IAAM1B,EAAO7J,KAAKmI,MAAlB,GAEI0B,GAAQA,EAAZ,QACEA,EAAA,iBAAwBA,EAAxB,WACAA,EAAA,sBAA6BA,EAA7B,gBACAA,EAAA,eAAsBA,EAAtB,SACAA,EAAA,aAAoBA,EAApB,SAGJ/C,WA7MO,SA6MG,GACR,QAAS9G,KAAF,QAAiBA,KAAKuI,cAAciD,IAA3C,KAIJ1L,OApVO,SAoVD,GACJ,IAAMoB,EAAuClB,KAAKyH,MAAMnG,OACpDtB,KAAKyH,MAAMd,IAAI,gCAAf3G,OAEAA,KAAKoJ,OAJF,QAMP,OAAOvC,EAAE,MAAO,CACdpB,YADc,aAEdQ,MAAO,gBACL,wBAAyBjG,KADpB,UAEL,oBAAqBA,KAFhB,OAGFA,KAAKyL,eALZ,O","file":"js/chunk-41a18b24.084136ca.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('v-col',{attrs:{\"sm\":\"12\",\"xs\":\"12\"}},[_c('v-treeview',{attrs:{\"active\":_vm.active,\"items\":_vm.list,\"load-children\":_vm.fetchHandout,\"open\":_vm.open,\"shaped\":\"\",\"hoverable\":\"\",\"color\":\"warning\",\"open-on-click\":\"\",\"transition\":\"\"},on:{\"update:active\":function($event){_vm.active=$event},\"update:open\":function($event){_vm.open=$event}},scopedSlots:_vm._u([{key:\"label\",fn:function(ref){\nvar item = ref.item;\nreturn [(!item.children)?_c('a',{on:{\"click\":function($event){return _vm.fetchHandout(item)}}},[_vm._v(_vm._s(item.name))]):_c('span',[_vm._v(_vm._s(item.name))])]}}])}),(_vm.list.length <= 0)?_c('h5',[_vm._v(\"No handouts available\")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row justify=\"center\">\r\n      <v-col sm=\"12\" xs=\"12\">\r\n        <v-treeview\r\n            :active.sync=\"active\"\r\n            :items=\"list\"\r\n            :load-children=\"fetchHandout\"\r\n            :open.sync=\"open\"\r\n            shaped\r\n            hoverable\r\n            color=\"warning\"\r\n            open-on-click\r\n            transition\r\n         >\r\n            <template slot=\"label\" slot-scope=\"{ item }\">\r\n               <a v-if=\"!item.children\" @click=\"fetchHandout(item)\">{{ item.name }}</a>\r\n               <span v-else>{{ item.name }}</span>\r\n            </template>\r\n         </v-treeview>\r\n         <h5 v-if=\"list.length <= 0\">No handouts available</h5>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport Axios from 'axios'\r\nimport store from '../../store';\r\nimport router from '../../router';\r\nexport default {\r\n   data: () => ({\r\n      handoutDialog: false,\r\n      dialog: false,\r\n      list: [],\r\n      open: [],\r\n      active: [],\r\n      formObject: {\r\n         id: '',\r\n         first_name: '',\r\n         middle_name: '',\r\n         last_name: '',\r\n         email: '',\r\n         password: '',\r\n         classification: '',\r\n      }\r\n   }),\r\n   watch: {\r\n      options: {\r\n        handler () {\r\n          this.getDataFromApi()\r\n            .then(data => {\r\n              this.desserts = data.items\r\n              this.totalDesserts = data.total\r\n            })\r\n        },\r\n        deep: true,\r\n      },\r\n    },\r\n   mounted() {\r\n      this.init();\r\n   },\r\n   methods: {\r\n      fetchHandout(item) {\r\n         if(item.children) return;\r\n         window.open(window.basePath + '/download/handout?prof_id=' + item.id +'&file='+ item.path,'_blank');\r\n      },\r\n      init() {\r\n         this.loggedIn = store.state.user\r\n         axios.get(window.basePath + '/api/file/handouts/professor/' + router.currentRoute.params.id).then(res => {\r\n            this.list = res.data.handouts\r\n         }).catch(error => {\r\n            console.log(error.response.data)\r\n         })\r\n      },\r\n      formAction(action, id) {\r\n         switch (action) {\r\n            case 'add':\r\n               this.add()\r\n               break;\r\n            case 'edit':\r\n               this.edit(id)\r\n               break;\r\n            case 'delete':\r\n               this.delete(id)\r\n               break;\r\n         \r\n            default:\r\n               return;\r\n               break;\r\n         }\r\n      },\r\n      add() {\r\n\r\n      },\r\n      edit(id) {\r\n         const professor = this.list.find(item => item.id == id);\r\n         Object.assign(this.formObject, professor);\r\n         this.dialog = !this.dialog\r\n      },\r\n      delete(id){\r\n\r\n      },\r\n      save() {\r\n         let itemIndex = this.list.findIndex(item => item.id == this.formObject.id);\r\n         Object.assign(this.list[itemIndex], this.formObject);\r\n         // this.desserts.forEach(item => {\r\n         //    if(item.id == this.formObject.id) {\r\n         //       item = this.formObject\r\n         //    }\r\n         //    console.log('formObject', this.formObject)\r\n         // })\r\n         this.dialog = false\r\n      },\r\n      viewStudents(professor_id) {\r\n         $router.push({ name: \"professor-profile\" })\r\n      }\r\n   },\r\n   computed: {\r\n      user: {\r\n         get() {\r\n            return store.state.user;\r\n         }, \r\n         set: val => {\r\n            return (store.state.user = val);\r\n         }\r\n      }\r\n   },\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProfHandouts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProfHandouts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProfHandouts.vue?vue&type=template&id=1d98ce1b&\"\nimport script from \"./ProfHandouts.vue?vue&type=script&lang=js&\"\nexport * from \"./ProfHandouts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VCol,VContainer,VRow,VTreeview})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\nimport { TreeviewItemFunction } from 'types'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => ([]),\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String as PropType<'leaf' | 'independent'>,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    },\n    value: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n    this.active.forEach(key => this.updateActive(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}